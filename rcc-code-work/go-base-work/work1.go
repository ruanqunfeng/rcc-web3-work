package gobasework

// 136. 只出现一次的数字
// 给你一个 非空 整数数组 nums ，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。

// 你必须设计并实现线性时间复杂度的算法来解决此问题，且该算法只使用常量额外空间。

func OnlyOnce(nums []int) (one int) {
	for _, v := range nums {
		one ^= v
		// ^ 是按位异或运算符，只有一个数时，结果就是这个数
		// 其他数都成了0，0^x=x
		// 0^0=0，x^x=0
		// 0^1=1，1^0=1
		// 1^1=0，0^1=1
		// 1^0=1，0^1=1
		// 1^x=x^1=0

	}
	return one
}
